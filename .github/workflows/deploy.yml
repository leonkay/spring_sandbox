#
name: Create and publish a Docker image

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    branches: ['main']

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  REGION: us-east1
  SERVICE: ${{ github.GCP_PROJECT }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_TAGS: v1 ${{ github.sha }}

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      #
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install latest podman
        if: matrix.install_latest
        run: |
          bash .github/install_latest_podman.sh
            # Build image using Buildah action
      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          layers: false
          tags: ${{ env.IMAGE_TAGS }}
          dockerfiles: |
            ./Containerfile
      # Uses the `podman/login` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push To Github Packages
        id: push-step
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-step.outputs.registry-paths }}"
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Cloud cli
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Echo Google Var
        run: echo $GCLOUD_PROJECT
      - name: Deploy to Cloud Run
        id: dcr
        uses: google-github-actions/deploy-cloudrun@v0.4.0
        with:
          service: ${{ env.SERVICE }}
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{  github.sha }}
          region: ${{ env.REGION }}

      - name: Show Output
        run: echo ${{ steps.dcr.outputs.url }}
